pragma solidity 0.5.7;


/// @title Holding
contract Holding {
    mapping (address => Holder) public holders;
    uint256 public initialLockedUpAmount = 0;
    uint256 public constant TARGET_AMOUNT = 40789499640000000000000000;

    struct Holder {
        uint256 availableAmount;
        uint256 lockedUntilBlocktimestamp;
    }

    event FundsReleased(address indexed _releasedToAccount, uint256 _amount);

    /// @notice loads holding data and checks for sanity
    constructor()
        public
        payable
    {
        require(address(this).balance == TARGET_AMOUNT, "Balance should equal target amount.");
                                                                   
        initHoldingData();

        require(initialLockedUpAmount == TARGET_AMOUNT, "Target amount should equal actual amount");
    }

    /// @notice Rlease funds for a specific address
    /// @param holderAddress the ethereum address which should get its funds
    function releaseFunds(address payable holderAddress) 
        public 
    {
        Holder storage holder = holders[holderAddress];
        
        require(holder.availableAmount > 0, "Available amount is 0");
        // solhint-disable-next-line not-rely-on-time
        require(block.timestamp > holder.lockedUntilBlocktimestamp, "Holding period is not over");
        
        uint256 amountToTransfer = holder.availableAmount;
        holder.availableAmount = 0;
        holderAddress.transfer(amountToTransfer);
        emit FundsReleased(holderAddress, amountToTransfer);
    }

    // solhint-disable function-max-lines
    /// @notice loads holding data
    function initHoldingData()
        internal
    {
        addHolding(0x120470000000000000000000000000000000000a, 10000000000000000000000000, 1564509540);
        addHolding(0x5A3977E000000000000000000000000000000000, 125000000000000000000000, 1572393540);
        addHolding(0xaae0dEBd2a4C519364e6098537145369913b26ec, 8400330000000000000000, 1572393540);
        addHolding(0x36874a6000000000000000000000000000000000, 125000000000000000000000, 1572393540);
        addHolding(0x108dD64c9e0D603d56304e97656E011831eD07ff, 8400330000000000000000, 1572393540);
        addHolding(0x294F375000000000000000000000000000000000, 250000000000000000000000, 1572393540);
        addHolding(0x2FB294a000000000000000000000000000000000, 13333330000000000000000, 1572393540);
        addHolding(0x102FB04000000000000000000000000000000000, 8333330000000000000000, 1572393540);
        addHolding(0x2b25001000000000000000000000000000000000, 12500000000000000000000, 1572393540);
        addHolding(0x35c468d000000000000000000000000000000000, 504020080000000000000000, 1572393540);
        addHolding(0xc8be7A0000000000000000000000000000000000, 8333330000000000000000, 1572393540);
        addHolding(0x53f3170000000000000000000000000000000000, 151206020000000000000000, 1572393540);
        addHolding(0xDC91890000000000000000000000000000000000, 2520100400000000000000000, 1572393540);
        addHolding(0xB476Ee7D610DAe7B23B671EBC7Bd6112E9772969, 12500000000000000000000, 1572393540);
        addHolding(0x2908B90000000000000000000000000000000000, 500000000000000000000000, 1564509540);
        addHolding(0x3B2EF74000000000000000000000000000000000, 8333330000000000000000, 1572393540);
        addHolding(0x1153818a2EB49F0a71B27313C32814fc02E4Db50, 312280000000000000000000, 1572393540);
        addHolding(0x330d610000000000000000000000000000000000, 166581330000000000000000, 1572393540);
        addHolding(0x3E5518C20876EAB3a42969D032fA7c30599AF912, 125000000000000000000000, 1572393540);
        addHolding(0x57f33EfaD76D4B783cf42c9e6Cb08f4425dfe96e, 12500000000000000000000, 1572393540);
        addHolding(0xA87E88F0BbC43468cb657294f2479c6f35179B80, 151206020000000000000000, 1572393540);
        addHolding(0x4CEBef9000000000000000000000000000000000, 250000000000000000000000, 1572393540);
        addHolding(0x511909CeF97475819dE66b645f13464285C227cE, 250000000000000000000000, 1572393540);
        addHolding(0x22Fc231000000000000000000000000000000000, 12500000000000000000000, 1572393540);
        addHolding(0x47919Fb8D4e7e360bef0D5a7a2411593dbcC0e77, 12500000000000000000000, 1572393540);
        addHolding(0x949423dB1BFeE1ddEc99c9D24a12a6eA27cb3489, 8333330000000000000000, 1572393540);
        addHolding(0x43EC568000000000000000000000000000000000, 37500000000000000000000, 1572393540);
        addHolding(0x67CF1C40622F39FA067b614f13Aad6da5dD95f32, 500000000000000000000000, 1564509540);
        addHolding(0x10b9390000000000000000000000000000000000, 201608030000000000000000, 1572393540);
        addHolding(0x76B707604cBD862050b938739637B7BDe1b7aD48, 8333330000000000000000, 1572393540);
        addHolding(0x568075f000000000000000000000000000000000, 250000000000000000000000, 1572393540);
        addHolding(0xD44FB8De580D34F44789408cC9335c9A9cE0cE4d, 126621000000000000000000, 1572393540);
        addHolding(0x007801b12345B6F10b69263cd6d4Fc50b58C8D80, 516666670000000000000000, 1572393540);
        addHolding(0x5D66a15000000000000000000000000000000000, 500000000000000000000000, 1564509540);
        addHolding(0x1d25868000000000000000000000000000000000, 2419474000000000000000000, 1572393540);
        addHolding(0x30e311C000000000000000000000000000000000, 252010040000000000000000, 1572393540);
        addHolding(0x428aB4B019EE3a9B9863B2B4Bf1885CE6dff9a73, 12500000000000000000000, 1572393540);
        addHolding(0x8081f20000000000000000000000000000000000, 125000000000000000000000, 1572393540);
        addHolding(0x5305c8071B604Da7fB45059E7EbFa1d674dDFC35, 16666670000000000000000, 1572393540);
        addHolding(0x3500717000000000000000000000000000000000, 8333330000000000000000, 1572393540);
        addHolding(0x3484c85000000000000000000000000000000000, 5000000000000000000000000, 1619697540);
        addHolding(0xFFd9b871dF6e93803C0877E98fC1722B39c00d78, 12500000000000000000000, 1572393540);
        addHolding(0x96A5eb172EfdF262Ed6beaaF0E20C6Af71831Fc9, 250000000000000000000000, 1572393540);
        addHolding(0x2Dd2E14000000000000000000000000000000000, 8333330000000000000000, 1572393540);
        addHolding(0x656E5569BeF7781bf0Db199D32027766053501ff, 319032000000000000000000, 1572393540);
        addHolding(0x1d53DB7000000000000000000000000000000000, 125000000000000000000000, 1572393540);
        addHolding(0xb5B6D8885fbF28f843Cc7886DE242B811d695205, 8333330000000000000000, 1572393540);
        addHolding(0x4549Ef8E287b94F1C0A8b88F55Ed8707D74d843c, 250000000000000000000000, 1572393540);
        addHolding(0xdAcD80D8e1d4f117515CAA477eE7599cDfc76619, 12500000000000000000000, 1572393540);
        addHolding(0x1f603e0000000000000000000000000000000000, 1000000000000000000000000, 1572393540);
        addHolding(0x5548f00000000000000000000000000000000000, 12600500000000000000000, 1572393540);
        addHolding(0x5bB9ba0000000000000000000000000000000000, 250000000000000000000000, 1572393540);
        addHolding(0x6Dd10e41A7a84FE23ab35feFa2F46C9895F87a2D, 285930000000000000000000, 1572393540);
        addHolding(0x16337Db000000000000000000000000000000000, 8333330000000000000000, 1572393540);
        addHolding(0xb999004B49C6b907D4278067DA5c85195DCD7Fc7, 38333330000000000000000, 1572393540);
        addHolding(0x3dBb229000000000000000000000000000000000, 250000000000000000000000, 1572393540);
        addHolding(0x559DA54000000000000000000000000000000000, 250000000000000000000000, 1572393540);
        addHolding(0x3A9d83766c03c465851a38DaA364ef7DEccd1ECE, 250000000000000000000000, 1572393540);
        addHolding(0xb61C11B6E42d459EFAEe8995c44DB08507e468E1, 337600000000000000000000, 1572393540);
        addHolding(0xe803d7955a911106cB8FD79049A2374fF0590003, 16666670000000000000000, 1572393540);
        addHolding(0x509B057000000000000000000000000000000000, 126005020000000000000000, 1572393540);
        addHolding(0x83980DB85394D7C1610F37A90Be744432368BaD4, 168006690000000000000000, 1572393540);
        addHolding(0xDb6cc57168c07b83a00f1f8871538446068824fC, 125000000000000000000000, 1572393540);
        addHolding(0x5035fBa000000000000000000000000000000000, 250000000000000000000000, 1572393540);
        addHolding(0xd96C830000000000000000000000000000000000, 8333330000000000000000, 1572393540);
        addHolding(0x31178CD000000000000000000000000000000000, 5040200800000000000000000, 1619697540);
        addHolding(0x2F531158e2305ED4fb4144a2F4085e3d96E1982e, 250000000000000000000000, 1572393540);
        addHolding(0x5D5dA31000000000000000000000000000000000, 1750000000000000000000000, 1572393540);
        addHolding(0x18b9347000000000000000000000000000000000, 504020080000000000000000, 1564509540);
        addHolding(0x002D4606B65c033769968bCdc63881b90B0853f5, 180786670000000000000000, 1572393540);
        addHolding(0x1FAa8d1000000000000000000000000000000000, 500000000000000000000000, 1564509540);
        addHolding(0x3344572000000000000000000000000000000000, 12500000000000000000000, 1572393540);
        addHolding(0x0d1d4e623D10F9FBA5Db95830F7d3839406C6AF2, 8333330000000000000000, 1572393540);
        addHolding(0x00C2F65230815D30EaA1A4d057bCF0B72FE3cc4e, 12500000000000000000000, 1572393540);
        addHolding(0x9c3A5Ec7bd63ecAC1B92aBe4b01b12fFD50bf3f2, 500000000000000000000000, 1564509540);
        addHolding(0x4563566000000000000000000000000000000000, 500000000000000000000000, 1564509540);
        addHolding(0x9be61E41490f5227080fA1aDBe3Ec0A973D59732, 10000000000000000000, 1556625540);
        addHolding(0x572F91b000000000000000000000000000000000, 250000000000000000000000, 1572393540);
        addHolding(0x39350E4A75D1E50A5072950325328884C11C1232, 8400330000000000000000, 1572393540);
        addHolding(0x3c96a53000000000000000000000000000000000, 500000000000000000000000, 1564509540);
        addHolding(0x0ad7Ba4aF33B485e6F2505c417554631a3e5643f, 12500000000000000000000, 1572393540);
        addHolding(0x5eea725000000000000000000000000000000000, 8333330000000000000000, 1572393540);
        addHolding(0x3aB790e000000000000000000000000000000000, 12500000000000000000000, 1572393540);
        addHolding(0x4cF8462000000000000000000000000000000000, 12500000000000000000000, 1572393540);
        addHolding(0x5425f6f000000000000000000000000000000000, 500000000000000000000000, 1564509540);
        addHolding(0x6D516767E4068FC331BDb331fba7578BDb07a68c, 166666670000000000000000, 1572393540);
        addHolding(0x106A8fF000000000000000000000000000000000, 12500000000000000000000, 1572393540);
        addHolding(0x102fb94000000000000000000000000000000000, 16666670000000000000000, 1572393540);
        addHolding(0x7ed62CF71D519d3Bf293ef90829508F92F4CCCcb, 12500000000000000000000, 1572393540);
        addHolding(0x199a8c5000000000000000000000000000000000, 125000000000000000000000, 1572393540);
    } 
    // solhint-enable function-max-lines

    /// @notice Adds a holding entry
    /// @param holder owner of the holded funds
    /// @param amountToHold the amount that should be holded
    /// @param lockUntil the timestamp of the date until the funds should be locked up
    function addHolding(address holder, uint256 amountToHold, uint256 lockUntil) 
        internal
    {
        Holder storage selectedHolder = holders[address(holder)];

        require(
            selectedHolder.availableAmount == 0 && selectedHolder.lockedUntilBlocktimestamp == 0,
            "Holding for this address was already set."
        );

        initialLockedUpAmount += amountToHold;
        
        selectedHolder.availableAmount = amountToHold;
        selectedHolder.lockedUntilBlocktimestamp = lockUntil;
    }
}
