pragma solidity 0.5.8;


/// @title Holding
contract Holding {
    mapping (address => Holder) public holders;
    uint256 public initialLockedUpAmount = 0;
    uint256 public constant TARGET_AMOUNT = 41198207933333333690000000;

    struct Holder {
        uint256 availableAmount;
        uint256 lockedUntilBlocktimestamp;
    }

    event FundsReleased(address indexed _releasedToAccount, uint256 _amount);

    /// @notice loads holding data and checks for sanity
    constructor()
        public
        payable
    {
        require(address(this).balance == TARGET_AMOUNT, "Balance should equal target amount.");
                                                                   
        initHoldingData();

        require(initialLockedUpAmount == TARGET_AMOUNT, "Target amount should equal actual amount");
    }

    /// @notice Rlease funds for a specific address
    /// @param holderAddress the ethereum address which should get its funds
    function releaseFunds(address payable holderAddress) 
        public 
    {
        Holder storage holder = holders[holderAddress];
        
        require(holder.availableAmount > 0, "Available amount is 0");
        // solhint-disable-next-line not-rely-on-time
        require(block.timestamp > holder.lockedUntilBlocktimestamp, "Holding period is not over");
        
        uint256 amountToTransfer = holder.availableAmount;
        holder.availableAmount = 0;
        holderAddress.transfer(amountToTransfer);
        emit FundsReleased(holderAddress, amountToTransfer);
    }

    // solhint-disable function-max-lines
    /// @notice loads holding data
    function initHoldingData()
        internal
    {
        addHolding(0x002D4606B65c033769968bCdc63881b90B0853f5, 180786666666667000000000, 1576152000);
        addHolding(0x006e371C454a2d081f3966c180Ba2C6165d87DE6, 8333333333333330000000, 1576152000);
        addHolding(0x00C2F65230815D30EaA1A4d057bCF0B72FE3cc4e, 12500000000000000000000, 1576152000);
        addHolding(0x03CccDC799d4DC37d56E3f9DBa7f9c210fa1086f, 12500000000000000000000, 1576152000);
        addHolding(0x047D955877a55Fbdac768573a9259f29B103a066, 12500000000000000000000, 1576152000);
        addHolding(0x06920Bb91F7027176Cf373996D39B539ba436D87, 500000000000000000000000, 1568268000);
        addHolding(0x06FdB93aa64F33A8fb40a36c462a3f7A074D632C, 8333333333333330000000, 1576152000);
        addHolding(0x0ad7Ba4aF33B485e6F2505c417554631a3e5643f, 12500000000000000000000, 1576152000);
        addHolding(0x0dd959deB4C458cc2aC379898Bf2c99f7A8F399B, 8333333333333330000000, 1576152000);
        addHolding(0x1153818a2EB49F0a71B27313C32814fc02E4Db50, 312280000000000000000000, 1576152000);
        addHolding(0x120470000000000000000000000000000000000a, 10000000000000000000000000, 1568268000);
        addHolding(0x15696134ebeed360dc90DC97dDD00bd07e1C11e9, 250000000000000000000000, 1576152000);
        addHolding(0x1f0c30B1aA4C468B5Beb02BaC8DF8F27617a2296, 166581333333333000000000, 1576152000);
        addHolding(0x2540dED041b6FEdC0Ff6F0CF26b891Ec97C95400, 8333333333333330000000, 1576152000);
        addHolding(0x25Ae7b45D8646580dfcAE403D29164729eB8642f, 125000000000000000000000, 1576152000);
        addHolding(0x349ebc5a6e853df121c84E999081e5992928e64F, 250000000000000000000000, 1576152000);
        addHolding(0x3885D15573E45228Dd54Cd4FDe9BfAc64d702ED4, 8333333333333330000000, 1576152000);
        addHolding(0x3A9d83766c03c465851a38DaA364ef7DEccd1ECE, 250000000000000000000000, 1576152000);
        addHolding(0x3AbAA3f24428d6028F5A7FC5b18ce9D04cCec229, 12500000000000000000000, 1576152000);
        addHolding(0x3C9f867D9b3a595987E198786FA9aB722E5C2F9b, 250000000000000000000000, 1576152000);
        addHolding(0x3f11B4ad17FdE4695CAd64E109AE92a679d87Bfc, 500000000000000000000000, 1568268000);
        addHolding(0x3F12af735238C6E2FA45eFB5b2F3FAE82Df4c922, 8333333333333330000000, 1576152000);
        addHolding(0x404Bb9c13364522133B363d5C4Adb7a88056B19d, 13333333333333300000000, 1576152000);
        addHolding(0x428aB4B019EE3a9B9863B2B4Bf1885CE6dff9a73, 12500000000000000000000, 1576152000);
        addHolding(0x47428fc08e56388372e7C81Ad4A1140d932d1096, 500000000000000000000000, 1568268000);
        addHolding(0x48Ee57fAf61c0b963113e7921e6173629e6bc443, 12500000000000000000000, 1576152000);
        addHolding(0x4d0aA1c3459BF41e3Ad4E4F40Bbf029Cb5723d83, 250000000000000000000000, 1576152000);
        addHolding(0x57f33EfaD76D4B783cf42c9e6Cb08f4425dfe96e, 12500000000000000000000, 1576152000);
        addHolding(0x5b3fb4e1d6040615F3e681bEc4C80b5d7C958071, 8333333333333330000000, 1576152000);
        addHolding(0x5fBb9c482034D287c5B3848Fc2F9272abdD5Bfa2, 16666666666666700000000, 1576152000);
        addHolding(0x656E5569BeF7781bf0Db199D32027766053501ff, 319032000000000000000000, 1576152000);
        addHolding(0x664f991cDb2ffe6b6A568edE65b0208DBCCE6f72, 125000000000000000000000, 1576152000);
        addHolding(0x69aF0912dd44dce2B2373dB4021788CbAd84Ff35, 5000000000000000000000000, 1623456000);
        addHolding(0x6a0A5dA2a48ea87C2A906C53b3373642c29a4b6C, 250000000000000000000000, 1576152000);
        addHolding(0x6cf32Cc52E220C023C2d92B1D62310F46a6E2a13, 8333333333333330000000, 1576152000);
        addHolding(0x6D516767E4068FC331BDb331fba7578BDb07a68c, 166666666666667000000000, 1576152000);
        addHolding(0x6Dd10e41A7a84FE23ab35feFa2F46C9895F87a2D, 285930000000000000000000, 1576152000);
        addHolding(0x7030892dbF9c2048E796296dDA597F145754a185, 500000000000000000000000, 1568268000);
        addHolding(0x7ed62CF71D519d3Bf293ef90829508F92F4CCCcb, 12500000000000000000000, 1576152000);
        addHolding(0x871ba4266793aD11dA537D4857dE7Ad49EaB662b, 1750000000000000000000000, 1576152000);
        addHolding(0x880E8b0ecE0171EDd0247f8d13D348d77A6b9b29, 16666666666666700000000, 1576152000);
        addHolding(0x887f2B16847248bc757b69F3c695F24Ff344dAF2, 4298536666666670000000, 1576152000);
        addHolding(0x8c994AdA51d35B8519424368807fb99C10336686, 500000000000000000000000, 1568268000);
        addHolding(0x9196e46D664CEDa55CB45a2CC5ab5Bd1b7e614E2, 12500000000000000000000, 1576152000);
        addHolding(0x943c85B13f24083Ec73815f7Ba763B7c42Ae0288, 12500000000000000000000, 1576152000);
        addHolding(0x9467B762550673F08B14423F8562048d5E369422, 12500000000000000000000, 1576152000);
        addHolding(0x949423dB1BFeE1ddEc99c9D24a12a6eA27cb3489, 8333333333333330000000, 1576152000);
        addHolding(0x96A5eb172EfdF262Ed6beaaF0E20C6Af71831Fc9, 250000000000000000000000, 1576152000);
        addHolding(0xA69DCa0814EAadC89B6dBE94c5e2110497690f6C, 16666666666666700000000, 1576152000);
        addHolding(0xA720A8EE90f5013cAe9BF7BCac1d153E42815454, 125000000000000000000000, 1576152000);
        addHolding(0xB080454F190E76eB8e719560fA8CAE50c71bceA9, 8333333333333330000000, 1576152000);
        addHolding(0xB476Ee7D610DAe7B23B671EBC7Bd6112E9772969, 12500000000000000000000, 1576152000);
        addHolding(0xb561618a3Ea959a5E363643B267C4CB8fe4B1DF7, 5000000000000000000000000, 1623456000);
        addHolding(0xb5B6D8885fbF28f843Cc7886DE242B811d695205, 8333333333333330000000, 1576152000);
        addHolding(0xb61C11B6E42d459EFAEe8995c44DB08507e468E1, 337600000000000000000000, 1576152000);
        addHolding(0xb999004B49C6b907D4278067DA5c85195DCD7Fc7, 38333333333333300000000, 1576152000);
        addHolding(0xBe4888C5b021E5F16cd254DE2D4EAF17625685C4, 250000000000000000000000, 1576152000);
        addHolding(0xc1d441a2aD43Af7b4A3d8E3200d2cEB3A973099D, 250000000000000000000000, 1576152000);
        addHolding(0xC58A20e290E858542D8e8bb07b600aeb9195fe30, 16666666666666700000000, 1576152000);
        addHolding(0xcfE7964b0b6412b013Dc019bDF3AfEf58be56593, 6424868130000000000000000, 1576152000);
        addHolding(0xd33D4F83e85c92E0B53ffe4FC0E18b0E3632C097, 8333333333333330000000, 1576152000);
        addHolding(0xD44FB8De580D34F44789408cC9335c9A9cE0cE4d, 126621000000000000000000, 1576152000);
        addHolding(0xdAcD80D8e1d4f117515CAA477eE7599cDfc76619, 12500000000000000000000, 1576152000);
        addHolding(0xDb6cc57168c07b83a00f1f8871538446068824fC, 125000000000000000000000, 1576152000);
        addHolding(0xDe6B493D368316b9078454e37DCE4968482Dfbe9, 500000000000000000000000, 1568268000);
        addHolding(0xE23c7cB60189BB2FD60625d2C2747B1e68f10776, 250000000000000000000000, 1576152000);
        addHolding(0xe6E8A111C89B05337049dE9349C7C4880a396EF1, 125000000000000000000000, 1576152000);
        addHolding(0xEbbDDf28bF3224791B0510a2AB8813f182fe4e2b, 8333333333333330000000, 1576152000);
        addHolding(0xf4e31018A926F64CB780cB9f5f027377bCfb26fC, 37500000000000000000000, 1576152000);
        addHolding(0xf8E6ecb4B0f17576525749bDF85524652cbf002E, 8333333333333330000000, 1576152000);
        addHolding(0xFD679097fE0F914642af9857e5799332Fe2Efa29, 2000000000000000000000000, 1568268000);
        addHolding(0xfD7A30D3C2bD017A458610274C275059D308b2E7, 2413543600000000000000000, 1576152000);
        addHolding(0xFfCf98C62c1BAd480aB6846717B173A72e2dD090, 125000000000000000000000, 1576152000);
        addHolding(0xFFd9b871dF6e93803C0877E98fC1722B39c00d78, 12500000000000000000000, 1576152000);
    } 
    // solhint-enable function-max-lines

    /// @notice Adds a holding entry
    /// @param holder owner of the holded funds
    /// @param amountToHold the amount that should be holded
    /// @param lockUntil the timestamp of the date until the funds should be locked up
    function addHolding(address holder, uint256 amountToHold, uint256 lockUntil) 
        internal
    {
        Holder storage selectedHolder = holders[address(holder)];

        require(
            selectedHolder.availableAmount == 0 && selectedHolder.lockedUntilBlocktimestamp == 0,
            "Holding for this address was already set."
        );

        initialLockedUpAmount += amountToHold;
        
        selectedHolder.availableAmount = amountToHold;
        selectedHolder.lockedUntilBlocktimestamp = lockUntil;
    }
}
